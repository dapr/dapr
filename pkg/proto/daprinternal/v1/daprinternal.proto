// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

syntax = "proto3";

package dapr.pkg.proto.daprinternal.v1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/daprinternal/v1";

// DaprInternal service is used to exchange the data between 
// caller dapr runtime and callee dapr runtime.
//
// The request message includes caller's HTTP/gRPC request
// and deliver callee's response including status code.
// The response status of rpc methods represents of internal gRPC
// connection status, not callee's response status.
// Thus, DaprInternal gRPC response returns OK in most cases
// regardless of callee's response.
service DaprInternal {
  rpc CallActor (CallActorRequest) returns (CallActorResponse) {}
  rpc CallLocal (CallLocalRequest) returns (CallLocalResponse) {}
}

message CallActorRequest {
  string actor_id = 1;
  string actor_type = 2;
  string method = 3;
  google.protobuf.Any data = 4;
  map<string,string> metadata = 5;
}

message CallActorResponse {
  google.protobuf.Any data = 1;
  map<string,string> metadata = 2;
}

// CallLocalRequest is the message to transfer caller's data to callee
// for service invocaton. This includes callee's app id and caller's request data.
message CallLocalRequest {
  // ver is the version of service invocation specification.
  // 
  // This field is required.
  int32 ver = 1;

  // method is a method name which will be invoked by caller.
  // 
  // This field is required.
  string method = 2;

  // metadata holds caller's HTTP headers or gRPC metadata.
  // 
  // This field is required.
  map<string, google.protobuf.ListValue> metadata = 3;

  // data conveys the content body which caller sent.
  // the type of data is bytes or protobuf message.
  // `content_type` is required if data is bytes type.
  //
  // This field is required.
  google.protobuf.Any data = 4;

  // content_type is the type of data content. When data includes bytes type data,
  // content_type is required.
  //
  // This field is optional.
  string content_type = 5;

  // protocol_extension includes protocol specific fields. 
  // for example, if users set HTTP Verb and HTTP querystring to transfer
  // HTTP compatible request, they will pack `dapr.pkg.proto.common.v1.HTTPExtensions`
  // message to protocol_extension.
  //
  // This field is optional.
  google.protobuf.Any protocol_extension = 6;
}

// CallLocalResponse is the message to transfer callee's response to caller
// for service invocaton.
message CallLocalResponse {
  // status_code can be http status code or grpc status code.
  // 
  // This field is required.
  int32 status_code = 1;

  // headers holds app channel response headers.
  // 
  // This field is required. 
  map<string, google.protobuf.ListValue> headers = 2;

  // trailer holds app channel response trailers.
  // this will be used only for gRPC app channel
  // 
  // This field is optional.
  map<string, google.protobuf.ListValue> trailers = 3;

  // data conveys the content body which callee returns.
  // the type of data is bytes or protobuf message.
  // `content_type` is required if data is bytes type.
  //
  // This field is required.
  google.protobuf.Any data = 4;

  // content_type is the type of data content. When data
  // includes bytes type data, content_type is required.
  //
  // This field is optional.
  string content_type = 5;
}
