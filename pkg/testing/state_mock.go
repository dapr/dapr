// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation and Dapr Contributors.
// Licensed under the MIT License.
// ------------------------------------------------------------

// Code generated by mockery v2.3.0. DO NOT EDIT.

package testing

import (
	mock "github.com/stretchr/testify/mock"

	state "github.com/dapr/components-contrib/state"
)

// MockStateStore is an autogenerated mock type for the Store type
type MockStateStore struct {
	mock.Mock
}

// BulkDelete provides a mock function with given fields: req
func (_m *MockStateStore) BulkDelete(req []state.DeleteRequest) error {
	ret := _m.Called(req)

	var r0 error
	if rf, ok := ret.Get(0).(func([]state.DeleteRequest) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// BulkSet provides a mock function with given fields: req
func (_m *MockStateStore) BulkSet(req []state.SetRequest) error {
	ret := _m.Called(req)

	var r0 error
	if rf, ok := ret.Get(0).(func([]state.SetRequest) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: req
func (_m *MockStateStore) Delete(req *state.DeleteRequest) error {
	ret := _m.Called(req)

	var r0 error
	if rf, ok := ret.Get(0).(func(*state.DeleteRequest) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: req
func (_m *MockStateStore) Get(req *state.GetRequest) (*state.GetResponse, error) {
	ret := _m.Called(req)

	var r0 *state.GetResponse
	if rf, ok := ret.Get(0).(func(*state.GetRequest) *state.GetResponse); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*state.GetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*state.GetRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func (_m *MockStateStore) BulkGet(req []state.GetRequest) (bool, []state.BulkGetResponse, error) {
	return false, nil, nil
}

// Init provides a mock function with given fields: metadata
func (_m *MockStateStore) Init(metadata state.Metadata) error {
	ret := _m.Called(metadata)

	var r0 error
	if rf, ok := ret.Get(0).(func(state.Metadata) error); ok {
		r0 = rf(metadata)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Ping provides a mock function
func (_m *MockStateStore) Ping() error {
	return nil
}

// Set provides a mock function with given fields: req
func (_m *MockStateStore) Set(req *state.SetRequest) error {
	ret := _m.Called(req)

	var r0 error
	if rf, ok := ret.Get(0).(func(*state.SetRequest) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Features returns the features for this state store.
func (_m *MockStateStore) Features() []state.Feature {
	return nil
}

func (_m *MockStateStore) Close() error {
	return nil
}
