
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dapr-placement
  labels:
    app: dapr-placement
spec:
{{- if eq .Values.global.ha.enabled true }}
  replicas: {{ .Values.global.ha.replicaCount }}
{{- else }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  serviceName: "dapr-placement"
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: dapr-placement
  template:
    metadata:
      labels:
        app: dapr-placement
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.global.tag }}
        app.kubernetes.io/component: placement
        app.kubernetes.io/part-of: "dapr"
        app.kubernetes.io/managed-by: "helm"
{{- if eq .Values.global.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.global.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.global.prometheus.port }}"
        prometheus.io/path: "/"
{{- end }}
    spec:
      containers:
      - name: dapr-placement
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 3
          failureThreshold: 5
{{- if contains "/" .Values.image.name }}
        image: "{{ .Values.image.name }}"
{{- else }}
        image: "{{ .Values.global.registry }}/dapr:{{ .Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 250m
            memory: 100Mi
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
{{- if eq .Values.global.ha.enabled true }}
          - name: raft-log
            mountPath: /var/run/dapr/raft-log
{{- end }}
        ports:
          - containerPort: 50005
            name: api
          - containerPort: 8201
            name: raft-server
{{- if eq .Values.global.prometheus.enabled true }}
          - name: metrics
            containerPort: {{ .Values.global.prometheus.port }}
            protocol: TCP
{{- end }}
        command:
        - "/placement"
        args:
{{- if eq .Values.global.ha.enabled true }}
        - "--id"
        - "$(PLACEMENT_ID)"
        - "--initial-cluster"
        - "dapr-placement-0=dapr-placement-0.dapr-placement:8201,dapr-placement-1=dapr-placement-1.dapr-placement:8201,dapr-placement-2=dapr-placement-2.dapr-placement.dapr-system:8201"
        - "--raft-logstore-path"
        - "/var/run/dapr/raft-log"
        - "--inmem-store-enabled=false"
{{- else }}
        - "--inmem-store-enabled=true"
{{- end }}
        - "--log-level"
        - debug
{{- if eq .Values.global.logAsJson true }}
        - "--log-as-json"
{{- end }}
{{- if eq .Values.global.prometheus.enabled true }}
        - "--enable-metrics"
        - "--replicationFactor"
        - "{{ .Values.replicationFactor }}"
        - "--metrics-port"
        - "{{ .Values.global.prometheus.port }}"
{{- else }}
        - "--enable-metrics=false"
{{- end }}
{{- if eq .Values.global.mtls.enabled true }}
        - "--tls-enabled"
{{- end }}
        env:
          - name: PLACEMENT_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - {{ .Values.global.daprControlPlaneOs }}
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - {{ .Values.global.daprControlPlaneArch }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets }}
{{- end }}
{{- if eq .Values.global.ha.enabled true }}
  volumeClaimTemplates:
  - metadata:
      name: raft-log
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
{{- end }}
