apiVersion: v1
kind: Secret
metadata:
  name: dapr-trust-bundle
  labels:
    app: dapr-sentry
data:
  {{ if .Values.tls.issuer.certPEM }}issuer.crt: {{ b64enc .Values.tls.issuer.certPEM | trim }}{{ end }}
  {{ if .Values.tls.issuer.keyPEM }}issuer.key: {{ b64enc .Values.tls.issuer.keyPEM | trim }}{{end}}
  {{ if .Values.tls.root.certPEM }}ca.crt: {{ b64enc .Values.tls.root.certPEM | trim }}{{end}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dapr-sentry
  labels:
    app: dapr-sentry
spec:
{{- if eq .Values.global.ha.enabled true }}
  replicas: {{ .Values.global.ha.replicaCount }}
{{- else }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      labels:
        app: dapr-sentry
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.global.tag }}
        app.kubernetes.io/component: sentry
        app.kubernetes.io/part-of: "dapr"
        app.kubernetes.io/managed-by: "helm"
{{- if eq .Values.global.prometheus.enabled true }}
      annotations:
        prometheus.io/scrape: "{{ .Values.global.prometheus.enabled }}"
        prometheus.io/port: "{{ .Values.global.prometheus.port }}"
        prometheus.io/path: "/"
{{- end }}
    spec:
{{- if eq .Values.global.ha.enabled true }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - dapr-sentry
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      containers:
      - name: dapr-sentry
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
          failureThreshold: 5
{{- if contains "/" .Values.image.name }}
        image: "{{ .Values.image.name }}"
{{- else }}
        image: "{{ .Values.global.registry }}/dapr:{{ .Values.global.tag }}"
{{- end }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
{{- if eq .Values.global.daprControlPlaneOs "linux" }}
        securityContext:
          runAsNonRoot: true
{{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 50001
{{- if eq .Values.global.prometheus.enabled true }}
        - name: metrics
          containerPort: {{ .Values.global.prometheus.port }}
          protocol: TCP
{{- end }}
        resources:
          limits:
            cpu: 1000m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
          - name: credentials
            mountPath: /var/run/dapr/credentials
            readOnly: true
        command:
        - "/sentry"
        args:
        - "--log-level"
        - {{ .Values.logLevel }}
{{- if eq .Values.global.logAsJson true }}
        - "--log-as-json"
{{- end }}
{{- if eq .Values.global.prometheus.enabled true }}
        - "--enable-metrics"
        - "--metrics-port"
        - "{{ .Values.global.prometheus.port }}"
{{- else }}
        - "--enable-metrics=false"
{{- end }}
        - "--trust-domain"
        - {{ .Values.tls.trustDomain }}
      serviceAccountName: dapr-operator
      volumes:
        - name: credentials
          secret:
            secretName: dapr-trust-bundle       
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
             nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - {{ .Values.global.daprControlPlaneOs }}
{{- if .Values.global.daprControlPlaneArch }}
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                    - {{ .Values.global.daprControlPlaneArch }}
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets }}
{{- end }}
