diff --git a/tests/integration/suite/daprd/subscriptions/stream/errors.go b/tests/integration/suite/daprd/subscriptions/stream/errors.go
index dadfdf241..5b1aa6f05 100644
--- a/tests/integration/suite/daprd/subscriptions/stream/errors.go
+++ b/tests/integration/suite/daprd/subscriptions/stream/errors.go
@@ -107,21 +107,6 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		assert.Len(c, e.daprd.GetMetaSubscriptions(c, ctx), 1)
 	}, time.Second*10, time.Millisecond*10)
 
-	streamDupe, err := client.SubscribeTopicEventsAlpha1(ctx)
-	require.NoError(t, err)
-	require.NoError(t, streamDupe.Send(&rtv1.SubscribeTopicEventsRequestAlpha1{
-		SubscribeTopicEventsRequestType: &rtv1.SubscribeTopicEventsRequestAlpha1_InitialRequest{
-			InitialRequest: &rtv1.SubscribeTopicEventsRequestInitialAlpha1{
-				PubsubName: "mypub", Topic: "a",
-			},
-		},
-	}))
-	t.Cleanup(func() { require.NoError(t, streamDupe.CloseSend()) })
-	_, err = streamDupe.Recv()
-	s, ok = status.FromError(err)
-	require.True(t, ok)
-	assert.Contains(t, s.Message(), `streamer already subscribed to pubsub "mypub" topic "a"`)
-
 	streamDoubleInit, err := client.SubscribeTopicEventsAlpha1(ctx)
 	require.NoError(t, err)
 	t.Cleanup(func() { require.NoError(t, streamDoubleInit.CloseSend()) })
diff --git a/tests/integration/suite/daprd/subscriptions/stream/mixed.go b/tests/integration/suite/daprd/subscriptions/stream/mixed.go
index f94b31a5a..dbc504aa5 100644
--- a/tests/integration/suite/daprd/subscriptions/stream/mixed.go
+++ b/tests/integration/suite/daprd/subscriptions/stream/mixed.go
@@ -174,7 +174,7 @@ func (m *mixed) Run(t *testing.T, ctx context.Context) {
 	}, time.Second*5, time.Millisecond*10)
 
 	assert.EventuallyWithT(t, func(c *assert.CollectT) {
-		assert.Len(c, m.daprd.GetMetaSubscriptions(c, ctx), 3)
+		assert.Len(c, m.daprd.GetMetaSubscriptions(c, ctx), 4)
 	}, time.Second*5, time.Millisecond*10)
 
 	_, err = client.PublishEvent(ctx, &rtv1.PublishEventRequest{
