diff --git a/tests/integration/suite/daprd/jobs/grpc/errors.go b/tests/integration/suite/daprd/jobs/grpc/errors.go
index 9abacb075..e69134eee 100644
--- a/tests/integration/suite/daprd/jobs/grpc/errors.go
+++ b/tests/integration/suite/daprd/jobs/grpc/errors.go
@@ -76,7 +76,7 @@ func (e *standardizedErrors) Run(t *testing.T, ctx context.Context) {
 		errInfo, ok = s.Details()[0].(*errdetails.ErrorInfo)
 
 		require.True(t, ok)
-		require.Equal(t, "SCHEDULER_EMPTY", errInfo.GetReason())
+		require.Equal(t, "DAPR_SCHEDULER_EMPTY", errInfo.GetReason())
 		require.Equal(t, "dapr.io", errInfo.GetDomain())
 	})
 
@@ -99,7 +99,7 @@ func (e *standardizedErrors) Run(t *testing.T, ctx context.Context) {
 		errInfo, ok = s.Details()[0].(*errdetails.ErrorInfo)
 
 		require.True(t, ok)
-		assert.Equal(t, "SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
 		require.Equal(t, "dapr.io", errInfo.GetDomain())
 	})
 
@@ -122,7 +122,7 @@ func (e *standardizedErrors) Run(t *testing.T, ctx context.Context) {
 		errInfo, ok = s.Details()[0].(*errdetails.ErrorInfo)
 
 		require.True(t, ok)
-		assert.Equal(t, "SCHEDULER_SCHEDULE_EMPTY", errInfo.GetReason())
+		assert.Equal(t, "DAPR_SCHEDULER_SCHEDULE_EMPTY", errInfo.GetReason())
 		require.Equal(t, "dapr.io", errInfo.GetDomain())
 	})
 
@@ -145,7 +145,7 @@ func (e *standardizedErrors) Run(t *testing.T, ctx context.Context) {
 		errInfo, ok = s.Details()[0].(*errdetails.ErrorInfo)
 
 		require.True(t, ok)
-		assert.Equal(t, "SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
 		require.Equal(t, "dapr.io", errInfo.GetDomain())
 	})
 
@@ -168,7 +168,7 @@ func (e *standardizedErrors) Run(t *testing.T, ctx context.Context) {
 		errInfo, ok = s.Details()[0].(*errdetails.ErrorInfo)
 
 		require.True(t, ok)
-		assert.Equal(t, "SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME_EMPTY", errInfo.GetReason())
 		require.Equal(t, "dapr.io", errInfo.GetDomain())
 	})
 }
diff --git a/tests/integration/suite/daprd/jobs/http/errors.go b/tests/integration/suite/daprd/jobs/http/errors.go
index 8d13e1c5d..cd7c8f2a0 100644
--- a/tests/integration/suite/daprd/jobs/http/errors.go
+++ b/tests/integration/suite/daprd/jobs/http/errors.go
@@ -89,7 +89,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		// Confirm that the 'errorCode' field exists and contains the correct error code
 		errCode, exists := data["errorCode"]
 		require.True(t, exists)
-		assert.Equal(t, "SCHEDULER_SCHEDULE_EMPTY", errCode)
+		assert.Equal(t, "DAPR_SCHEDULER_SCHEDULE_EMPTY", errCode)
 
 		// Confirm that the 'message' field exists and contains the correct error message
 		errMsg, exists := data["message"]
@@ -108,7 +108,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		detailsObject, ok := detailsArray[0].(map[string]interface{})
 		require.True(t, ok)
 		require.Equal(t, "dapr.io", detailsObject["domain"])
-		assert.Equal(t, "SCHEDULER_SCHEDULE_EMPTY", detailsObject["reason"])
+		assert.Equal(t, "DAPR_SCHEDULER_SCHEDULE_EMPTY", detailsObject["reason"])
 
 		require.Equal(t, ErrInfoType, detailsObject["@type"])
 	})
@@ -138,7 +138,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		// Confirm that the 'errorCode' field exists and contains the correct error code
 		errCode, exists := data["errorCode"]
 		require.True(t, exists)
-		assert.Equal(t, "SCHEDULER_JOB_NAME_EMPTY", errCode)
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME_EMPTY", errCode)
 
 		// Confirm that the 'message' field exists and contains the correct error message
 		errMsg, exists := data["message"]
@@ -157,7 +157,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		detailsObject, ok := detailsArray[0].(map[string]interface{})
 		require.True(t, ok)
 		require.Equal(t, "dapr.io", detailsObject["domain"])
-		assert.Equal(t, "SCHEDULER_JOB_NAME_EMPTY", detailsObject["reason"])
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME_EMPTY", detailsObject["reason"])
 		require.Equal(t, ErrInfoType, detailsObject["@type"])
 	})
 
@@ -186,7 +186,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		// Confirm that the 'errorCode' field exists and contains the correct error code
 		errCode, exists := data["errorCode"]
 		require.True(t, exists)
-		assert.Equal(t, "SCHEDULER_JOB_NAME", errCode)
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME", errCode)
 
 		// Confirm that the 'message' field exists and contains the correct error message
 		errMsg, exists := data["message"]
@@ -205,7 +205,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		detailsObject, ok := detailsArray[0].(map[string]interface{})
 		require.True(t, ok)
 		require.Equal(t, "dapr.io", detailsObject["domain"])
-		assert.Equal(t, "SCHEDULER_JOB_NAME", detailsObject["reason"])
+		assert.Equal(t, "DAPR_SCHEDULER_JOB_NAME", detailsObject["reason"])
 		require.Equal(t, ErrInfoType, detailsObject["@type"])
 	})
 
@@ -246,7 +246,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		// Confirm that the 'errorCode' field exists and contains the correct error code
 		errCode, exists := data["errorCode"]
 		require.True(t, exists)
-		assert.Equal(t, "SCHEDULER_GET_JOB", errCode)
+		assert.Equal(t, "DAPR_SCHEDULER_GET_JOB", errCode)
 
 		// Confirm that the 'message' field exists and contains the correct error message
 		errMsg, exists := data["message"]
@@ -265,7 +265,7 @@ func (e *errors) Run(t *testing.T, ctx context.Context) {
 		detailsObject, ok := detailsArray[0].(map[string]interface{})
 		require.True(t, ok)
 		require.Equal(t, "dapr.io", detailsObject["domain"])
-		assert.Equal(t, "SCHEDULER_GET_JOB", detailsObject["reason"])
+		assert.Equal(t, "DAPR_SCHEDULER_GET_JOB", detailsObject["reason"])
 		require.Equal(t, ErrInfoType, detailsObject["@type"])
 	})
 }
