diff --git a/tests/integration/framework/process/grpc/operator/server.go b/tests/integration/framework/process/grpc/operator/server.go
index a484b18ae..be3adf72b 100644
--- a/tests/integration/framework/process/grpc/operator/server.go
+++ b/tests/integration/framework/process/grpc/operator/server.go
@@ -51,7 +51,7 @@ func (s *server) GetResiliency(ctx context.Context, in *operatorv1.GetResiliency
 	if s.getConfigurationFn != nil {
 		return s.getResiliencyFn(ctx, in)
 	}
-	return nil, nil
+	return new(operatorv1.GetResiliencyResponse), nil
 }
 
 func (s *server) HTTPEndpointUpdate(in *operatorv1.HTTPEndpointUpdateRequest, srv operatorv1.Operator_HTTPEndpointUpdateServer) error {
@@ -86,12 +86,12 @@ func (s *server) ListSubscriptions(ctx context.Context, in *emptypb.Empty) (*ope
 	if s.listSubscriptionsFn != nil {
 		return s.listSubscriptionsFn(ctx, in)
 	}
-	return nil, nil
+	return new(operatorv1.ListSubscriptionsResponse), nil
 }
 
 func (s *server) ListSubscriptionsV2(ctx context.Context, in *operatorv1.ListSubscriptionsRequest) (*operatorv1.ListSubscriptionsResponse, error) {
 	if s.listSubscriptionsV2Fn != nil {
 		return s.listSubscriptionsV2Fn(ctx, in)
 	}
-	return nil, nil
+	return new(operatorv1.ListSubscriptionsResponse), nil
 }
diff --git a/tests/integration/framework/process/kubernetes/informer/informer.go b/tests/integration/framework/process/kubernetes/informer/informer.go
index 8b9a3f415..553ee013a 100644
--- a/tests/integration/framework/process/kubernetes/informer/informer.go
+++ b/tests/integration/framework/process/kubernetes/informer/informer.go
@@ -32,6 +32,7 @@ import (
 	configapi "github.com/dapr/dapr/pkg/apis/configuration/v1alpha1"
 	httpendapi "github.com/dapr/dapr/pkg/apis/httpEndpoint/v1alpha1"
 	resiliencyapi "github.com/dapr/dapr/pkg/apis/resiliency/v1alpha1"
+	subapi "github.com/dapr/dapr/pkg/apis/subscriptions/v2alpha1"
 )
 
 // Informer is a fake informer that adds events to the Kubernetes API server to
@@ -132,6 +133,8 @@ func (i *Informer) objToGVK(t *testing.T, obj runtime.Object) schema.GroupVersio
 		return schema.GroupVersionKind{Group: "dapr.io", Version: "v1alpha1", Kind: "httpendpoints"}
 	case *resiliencyapi.Resiliency:
 		return schema.GroupVersionKind{Group: "dapr.io", Version: "v1alpha1", Kind: "resiliencies"}
+	case *subapi.Subscription:
+		return schema.GroupVersionKind{Group: "dapr.io", Version: "v2alpha1", Kind: "subscriptions"}
 	case *corev1.Pod:
 		return schema.GroupVersionKind{Group: "", Version: "v1", Kind: "pods"}
 	case *corev1.Service:
diff --git a/tests/integration/framework/process/kubernetes/options.go b/tests/integration/framework/process/kubernetes/options.go
index d1caf7a8b..3273653cd 100644
--- a/tests/integration/framework/process/kubernetes/options.go
+++ b/tests/integration/framework/process/kubernetes/options.go
@@ -32,6 +32,7 @@ import (
 	httpendapi "github.com/dapr/dapr/pkg/apis/httpEndpoint/v1alpha1"
 	resapi "github.com/dapr/dapr/pkg/apis/resiliency/v1alpha1"
 	subapi "github.com/dapr/dapr/pkg/apis/subscriptions/v1alpha1"
+	subv2api "github.com/dapr/dapr/pkg/apis/subscriptions/v2alpha1"
 	"github.com/dapr/dapr/tests/integration/framework/process/kubernetes/store"
 )
 
@@ -55,6 +56,9 @@ func WithClusterDaprResiliencyList(t *testing.T, res *resapi.ResiliencyList) Opt
 }
 
 func WithClusterDaprSubscriptionList(t *testing.T, subs *subapi.SubscriptionList) Option {
+	return handleClusterListResource(t, "/apis/dapr.io/v1alpha1/subscriptions", subs)
+}
+func WithClusterDaprSubscriptionListV2(t *testing.T, subs *subv2api.SubscriptionList) Option {
 	return handleClusterListResource(t, "/apis/dapr.io/v2alpha1/subscriptions", subs)
 }
 
@@ -119,6 +123,7 @@ func WithBaseOperatorAPI(t *testing.T, td spiffeid.TrustDomain, ns string, sentr
 			WithClusterStatefulSetList(t, &appsv1.StatefulSetList{TypeMeta: metav1.TypeMeta{APIVersion: "apps/v1", Kind: "StatefulSetList"}}),
 			WithClusterDeploymentList(t, &appsv1.DeploymentList{TypeMeta: metav1.TypeMeta{APIVersion: "apps/v1", Kind: "DeploymentList"}}),
 			WithClusterDaprComponentList(t, &compapi.ComponentList{TypeMeta: metav1.TypeMeta{APIVersion: "dapr.io/v1alpha1", Kind: "ComponentList"}}),
+			WithClusterDaprSubscriptionListV2(t, &subv2api.SubscriptionList{TypeMeta: metav1.TypeMeta{APIVersion: "dapr.io/v2alpha1", Kind: "SubscriptionList"}}),
 			WithClusterDaprHTTPEndpointList(t, &httpendapi.HTTPEndpointList{TypeMeta: metav1.TypeMeta{APIVersion: "dapr.io/v1alpha1", Kind: "HTTPEndpointList"}}),
 			WithClusterDaprResiliencyList(t, &resapi.ResiliencyList{TypeMeta: metav1.TypeMeta{APIVersion: "dapr.io/v1alpha1", Kind: "ResiliencyList"}}),
 		} {
