# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: dapr-helm-repo

on:
  push:
    branches:
      - helmrepo

jobs:
  publish:
    name: helm chart upload
    runs-on: ubuntu-latest
    env:
      GOVER: 1.14
      GOOS: linux
      GOARCH: amd64
      GOPROXY: https://proxy.golang.org
      HELM: helm
      RELEASE_NAME: dapr
      HELM_CHART_ROOT: ./charts/dapr
      DAPR_REGISTRY: ${{ secrets.DOCKER_TEST_REGISTRY }}
      DAPR_TEST_REGISTRY: ${{ secrets.DOCKER_TEST_REGISTRY }}
      HELMVER: v3.0.3
      DAPR_NAMESPACE: dapr-tests
      MAX_TEST_TIMEOUT: 5400
      DAPR_REPO_CODE_PATH: dapr-gitroot
      DAPR_HELM_REPO_CODE_PATH: dapr-helm-charts
      ARTIFACT_DIR: ./release
      HELM_PACKAGE_DIR: helm
      DAPR_VERSION_ARTIFACT: dapr_version
      DAPR_RELEASE_TAG_ARTIFACT: dapr_release
    steps:
      - name: Set up Go ${{ env.GOVER }}
        uses: actions/setup-go@v2-beta
        with:
          go-version: ${{ env.GOVER }}
      - name: Set env variables
        run: |
          echo ::set-env name=CHECKOUT_REPO::${{ github.repository }}
          echo ::set-env name=CHECKOUT_REF::refs/heads/master
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          repository: ${{ env.CHECKOUT_REPO }}
          ref: ${{ env.CHECKOUT_REF }}
      - name: Parse release version and set REL_VERSION
        run: |
          python ./.github/scripts/get_release_version.py
          echo ::set-env name=DAPR_VERSION::"edge"
          echo ::set-env name=LATEST_RELEASE::"true"
      - name: Set DAPR_VERSION
        if: ${{ env.DAPR_VERSION }} == ''
        run: |
          mkdir -p ${{ env.ARTIFACT_DIR }}
          echo ${{ env.DAPR_VERSION }} > ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_VERSION_ARTIFACT }}
          echo ${{ env.LATEST_RELEASE }} > ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_RELEASE_TAG_ARTIFACT }}
      - name: Upload DAPR version artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.DAPR_VERSION_ARTIFACT }}
          path: ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_VERSION_ARTIFACT }}
      - name: Upload DAPR release tag artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.DAPR_RELEASE_TAG_ARTIFACT }}
          path: ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_RELEASE_TAG_ARTIFACT }}
      - name: Set up Helm ${{ env.HELMVER }}
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELMVER }}
      - name: Package Helm chart
        env:
              HELM_CHARTS_DIR: ./charts/dapr
        run: |
            echo $(pwd)
            mkdir -p ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}
            helm package ${{ env.HELM_CHARTS_DIR }} --destination ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}
      - name: Upload Helm charts package to artifacts
        uses: actions/upload-artifact@master
        with:
          name: dapr_helm_charts_package
          path: ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}
  helmpublish:
    name: Publish helm charts to Helm github pages repo
    needs: publish
    if: github.event_name != 'pull_request'
    env:
      ARTIFACT_DIR: ./release
      DAPR_VERSION_ARTIFACT: dapr_version
      DAPR_RELEASE_TAG_ARTIFACT: dapr_release
      HELM_PACKAGE_DIR: helm
    runs-on: ubuntu-latest
    steps:
      - name: Create Helm charts directory
        run: |
          mkdir -p ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}
      - name: download artifacts - dapr_helm_charts_package
        uses: actions/download-artifact@master
        with:
          name: dapr_helm_charts_package
          path: ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}
      - name: download artifacts - dapr_version
        uses: actions/download-artifact@master
        with:
          name: ${{ env.DAPR_VERSION_ARTIFACT }}
          path: ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_VERSION_ARTIFACT }}
      - name: download artifacts - dapr_release
        uses: actions/download-artifact@master
        with:
          name: ${{ env.DAPR_RELEASE_TAG_ARTIFACT }}
          path: ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_RELEASE_TAG_ARTIFACT }}
      - name: Checkout Helm Charts Repo
        uses: actions/checkout@v2
        env:
              DAPR_HELM_REPO: dapr/dapr-helm-charts.io
              DAPR_HELM_REPO_CODE_PATH: dapr-helm-charts
        with:
          repository: ${{ env.DAPR_HELM_REPO }}
          ref: refs/heads/master
          token: ${{ secrets.DAPR_BOT_HELM_TOKEN }}
          path: ${{ env.DAPR_HELM_REPO_CODE_PATH }}
      - name: Upload helm charts to Helm Repo
        env:
              DAPR_HELM_REPO_CODE_PATH: dapr-helm-charts
              DAPR_VERSION_ARTIFACT: dapr_version
        run: |
            daprReleaseTag=`cat ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_RELEASE_TAG_ARTIFACT }}/${{ env.DAPR_RELEASE_TAG_ARTIFACT }}`
            echo $daprReleaseTag
            if [ "$daprReleaseTag" = "true" ]; then
              daprVersion=`cat ${{ env.ARTIFACT_DIR }}/${{ env.DAPR_VERSION_ARTIFACT }}/${{ env.DAPR_VERSION_ARTIFACT }}`
              cp ${{ env.ARTIFACT_DIR }}/${{ env.HELM_PACKAGE_DIR }}/* ./${{ env.DAPR_HELM_REPO_CODE_PATH }}/
              cd ./${{ env.DAPR_HELM_REPO_CODE_PATH }}
              git config --global user.email "daprweb@microsoft.com"
              git config --global user.name "dapr-bot"
              git add --all
              git commit -m "Release - $daprVersion"  
              git push
            fi
