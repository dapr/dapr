# actionscore/actions pipeline

trigger:
- master
- release-*

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  GOBIN:  '$(GOPATH)/bin'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)'
  BlobPrefix: ''

jobs:
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: actionsrt
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: placement
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: operator
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: arm
    binaryName: actionsrt
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: arm
    binaryName: placement
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: arm
    binaryName: operator
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: actionsrt
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: placement
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: operator
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: actionsrt
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: placement
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: operator
- job: 'publish_edge_binaries'
  pool:
    vmImage: 'windows-2019'
  dependsOn:
  - build_darwin_amd64_actionsrt
  - build_darwin_amd64_placement
  - build_darwin_amd64_operator
  - build_linux_amd64_actionsrt
  - build_linux_amd64_placement
  - build_linux_amd64_operator
  - build_linux_arm_actionsrt
  - build_linux_arm_placement
  - build_linux_arm_operator
  - build_windows_amd64_actionsrt
  - build_windows_amd64_placement
  - build_windows_amd64_operator
  condition: |
    and
    (
      eq(dependencies.build_darwin_amd64_actionsrt.result, 'Succeeded'),
      eq(dependencies.build_darwin_amd64_placement.result, 'Succeeded'),
      eq(dependencies.build_darwin_amd64_operator.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_actionsrt.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_placement.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_operator.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_actionsrt.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_placement.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_operator.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_actionsrt.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_placement.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_operator.result, 'Succeeded'),
      ne(variables['Build.Reason'], 'PullRequest')
    )
  steps:
    - script: echo '##vso[task.setvariable variable=BlobPrefix]$(Build.SourceBranchName)/$(REL_VERSION)
      condition: not(startsWith(variables['Build.SourceBranch'], 'refs/heads/release-'))
    - task: DownloadPipelineArtifact@2
      displayName: 'Download pipeline artifacts to workspace'
      inputs:
        buildType: 'current'
        itemPattern: '**/*.zip'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureFileCopy@3
      displayName: 'Publish archives to blob storage'
      inputs:
        SourcePath: '$(Pipeline.Workspace)/drop'
        azureSubscription: 'Actions Releases'
        Destination: 'AzureBlob'
        storage: 'actionsreleases'
        ContainerName: 'bin'
        blobPrefix: '$(BlobPrefix)'
- job: 'build_and_push_amd64_docker_image'
  variables:
    DockerVersionTag: ''
    DockerReleaseTag: ''
  pool: 
    vmImage: 'ubuntu-latest'
  dependsOn:
    - publish_edge_binaries
  condition: |
    eq(dependencies.publish_edge_binaries.result, 'Succeeded')
  steps:
    - template: 'build-and-push-image-template.yml'
      parameters:
        targetArch: amd64
- job: 'build_and_push_arm_docker_image'
  variables:
    DockerVersionTag: ''
    DockerReleaseTag: ''
  pool: 
    vmImage: 'ubuntu-latest'
  dependsOn:
    - publish_edge_binaries
  condition: |
    eq(dependencies.publish_edge_binaries.result, 'Succeeded')
  steps:
    - template: 'build-and-push-image-template.yml'
      parameters:
        targetArch: arm