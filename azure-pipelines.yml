# actionscore/actions pipeline

trigger:
- master

variables:
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  GOBIN:  '$(GOPATH)/bin'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)'

jobs:
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: action
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: assigner
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: darwin
    targetArch: amd64
    binaryName: controller
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: linux
    targetArch: arm
    binaryName: action
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: linux
    targetArch: arm
    binaryName: assigner
- template: 'build-binary-template.yml'
  parameters:
    poolImage: macOS-latest
    targetOS: linux
    targetArch: arm
    binaryName: controller
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: action
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: assigner
- template: 'build-binary-template.yml'
  parameters:
    poolImage: ubuntu-latest
    targetOS: linux
    targetArch: amd64
    binaryName: controller
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: action
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: assigner
- template: 'build-binary-template.yml'
  parameters:
    poolImage: windows-2019
    targetOS: windows
    targetArch: amd64
    binaryName: controller
- job: 'publish_edge_binaries'
  pool:
    vmImage: 'windows-2019'
  dependsOn:
  - build_darwin_amd64_action
  - build_darwin_amd64_assigner
  - build_darwin_amd64_controller
  - build_linux_amd64_action
  - build_linux_amd64_assigner
  - build_linux_amd64_controller
  - build_linux_arm_action
  - build_linux_arm_assigner
  - build_linux_arm_controller
  - build_windows_amd64_action
  - build_windows_amd64_assigner
  - build_windows_amd64_controller
  condition: |
    and
    (
      eq(dependencies.build_darwin_amd64_action.result, 'Succeeded'),
      eq(dependencies.build_darwin_amd64_assigner.result, 'Succeeded'),
      eq(dependencies.build_darwin_amd64_controller.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_action.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_assigner.result, 'Succeeded'),
      eq(dependencies.build_linux_amd64_controller.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_action.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_assigner.result, 'Succeeded'),
      eq(dependencies.build_linux_arm_controller.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_action.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_assigner.result, 'Succeeded'),
      eq(dependencies.build_windows_amd64_controller.result, 'Succeeded')
    )
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download pipeline artifacts to workspace'
      inputs:
        buildType: 'current'
        itemPattern: '**/*.zip'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureFileCopy@3
      displayName: 'Publish archives to blob storage'
      inputs:
          SourcePath: '$(Pipeline.Workspace)/drop'
          azureSubscription: 'Actions Releases'
          Destination: 'AzureBlob'
          storage: 'actionsreleases'
          ContainerName: 'bin'
- job: 'build_and_push_docker_image'
  pool: 
    vmImage: 'ubuntu-latest'
  dependsOn:
    - publish_edge_binaries
  condition: |
    - eq(dependencies.publish_edge_binaries.result, 'Succeeded'),
  steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download pipeline artifacts to workspace'
      inputs:
        buildType: 'current'
        itemPattern: '**/*.zip'
        targetPath: '$(Pipeline.Workspace)'
    - task: CopyFiles@2
      displayName: 'Copy Dockerfile to workspace'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: 'Dockerfile'
        TargetFolder: '$(Pipeline.Workspace)'
        OverWrite: true
        flattenFolders: true
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '$(Pipeline.Workspace)/drop/*.zip'
        destinationFolder: '$(Pipeline.Workspace)/dist'
        cleanDestinationFolder: true
    - task: Docker@2
      enabled: false
      displayName: 'Build and push Docker image'
      inputs:
        repository: 'actions'
        command: 'build'
        Dockerfile: '$(Pipeline.Workspace)/Dockerfile'
        tags: 'edge
          latest
          $(Build.BuildId)
          $(ReleaseVersion)'