/*
Copyright 2021 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package dapr.proto.operator.v1;

import "google/protobuf/empty.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/operator/v1;operator";

service Operator {
  // Sends events to Dapr sidecars upon component changes.
  rpc ComponentUpdate (ComponentUpdateRequest) returns (stream ComponentUpdateEvent) {}
  // Returns a list of available components
  rpc ListComponents (ListComponentsRequest) returns (ListComponentResponse) {}
  // Returns a given configuration by name
  rpc GetConfiguration (GetConfigurationRequest) returns (GetConfigurationResponse) {}
  // Returns a list of pub/sub subscriptions
  rpc ListSubscriptions (google.protobuf.Empty) returns (ListSubscriptionsResponse) {}
}

// ListComponentsRequest is the request to get components for a sidecar in namespace.
message ListComponentsRequest {
  string namespace = 1;
}

// ComponentUpdateRequest is the request to get updates about new components for a given namespace.
message ComponentUpdateRequest {
  string namespace = 1;
}

// ComponentUpdateEvent includes the updated component event.
message ComponentUpdateEvent {
  bytes component = 1;
}

// ListComponentResponse includes the list of available components.
message ListComponentResponse {
  repeated bytes components = 1;
}

// GetConfigurationRequest is the request message to get the configuration.
message GetConfigurationRequest {
  string name = 1;
  string namespace = 2;
}

// GetConfigurationResponse includes the requested configuration.
message GetConfigurationResponse {
  bytes configuration = 1;
}

// ListSubscriptionsResponse includes pub/sub subscriptions.
message ListSubscriptionsResponse {
  repeated bytes subscriptions = 1;
}
