/*
Copyright 2024 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package dapr.proto.operator.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/operator/v1;operator";

// ResourceConditionStatus is the status condition to a resource.
enum ResourceConditionStatus {
  // STATUS_UNKNOWN indicates that the condition status is unknown.
  STATUS_UNKNOWN = 0;

  // STATUS_SUCCESS indicates that the condition status is success.
  STATUS_SUCCESS = 1;

  // STATUS_FAILURE indicates that the condition status is failed.
  STATUS_FAILURE = 2;
}

// ResourceType is the type of the resource.
enum ResourceType {
  // UNKNOWN_RESOURCE indicates that the resource type is unknown.
  RESOURCE_UNKNOWN = 0;

  // RESOURCE_COMPONENT indicates that the resource type is a component.
  RESOURCE_COMPONENT = 1;
}

// EventType is the type of the event.
enum EventType {
  // UNKNOWN indicates that the event type is unknown.
  EVENT_UNKNOWN = 0;

  // EVENT_INIT indicates that the event type is init.
  EVENT_INIT = 1;

  // EVENT_CLOSE indicates that the event type is close.
  EVENT_CLOSE = 2;
}

// ResourceResult is the result of the resource initialization.
message ResourceResult {
  // resource_type is the type of the resource.
  ResourceType resource_type = 1;

  // event_type is the type of the event.
  EventType event_type = 2;

  // name is the name of the resource.
  string name = 3;

  // condition is the condition of the resource.
  ResourceConditionStatus condition = 4;

  // Reason is a brief machine readable explanation for the condition's last
  // transition.
  optional string reason = 5;

  // Message is a human readable description of the details of the last
  // transition, complementing reason.
  optional string message = 6;

  // observed_generation is the generation of the resource. Represents the
  // .metadata.generation that the condition was set based upon. For instance,
  // if .metadata.generation is currently 12, but the
  // .status.condition[x].observedGeneration is 9, the condition is out of date
  // with respect to the current state of the Component.
  int64 observed_generation = 7;

  // last_transaction_time is the timestamp corresponding to the last status
  // change of this condition.
  google.protobuf.Timestamp last_transaction_time = 8;
}
