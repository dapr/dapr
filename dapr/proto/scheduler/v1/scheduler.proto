syntax = "proto3";

package dapr.proto.scheduler.v1;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "dapr/proto/runtime/v1/dapr.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/scheduler/v1;scheduler";

service Scheduler {
	// ScheduleJob is used by the daprd sidecar to schedule a job.
	rpc ScheduleJob(ScheduleJobRequest) returns (ScheduleJobResponse) {}
	// Get a job
	rpc GetJob(GetJobRequest) returns (GetJobResponse) {}
	// DeleteJob is used by the daprd sidecar to delete a job.
	rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse) {}
  // WatchJobs is used by the daprd sidecar to connect to the Scheduler
  // service to watch for jobs triggering back.
  rpc WatchJobs(WatchJobsRequest) returns (stream WatchJobsResponse) {}
}

// TODO(Cassie): add an internal Job message to have a diff one than dapr.proto

message WatchJobsRequest {
	// The app_id of the sidecar.
	string app_id = 1;
	// The namespace of the sidecar.
	string namespace = 2;
}

message WatchJobsResponse {
	// Job data.
	google.protobuf.Any data = 1;

	// The metadata associated with the job.
	// The sidecar will create the unique `key` for storing data in the state store and pass the generated
	// `key` along to the scheduler service for data lookup upon ‘trigger’ time later on.
	// The sidecar will also add metadata in order to know whether this job is registered for an actor.
	// This is needed, as the routing mechanism for actors is different for the callback.
	map<string,string> metadata = 2;
}

message ScheduleJobRequest {
	// The job to be scheduled.
	runtime.v1.Job job = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;

	// The app_id of the sidecar.
	string app_id = 3;

	// The namespace of the sidecar.
	string namespace = 4;
}

message ScheduleJobResponse {
	// Empty as of now
}

// GetJobRequest is the message used by the daprd sidecar to delete or get a job.
message GetJobRequest {
	string job_name = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;

	// The app_id of the sidecar.
	string app_id = 3;

	// The namespace of the sidecar.
	string namespace = 4;
}

// GetJobResponse is the response message to convey the details of a job.
message GetJobResponse {
	runtime.v1.Job job = 1;
}

// DeleteJobRequest is the message used by the daprd sidecar to delete or get a job.
message DeleteJobRequest {
	string job_name = 1;

	// The metadata associated with the job.
	map<string,string> metadata = 2;

	// The app_id of the sidecar.
	string app_id = 3;

	// The namespace of the sidecar.
	string namespace = 4;
}

message DeleteJobResponse {
	// Empty as of now
}

