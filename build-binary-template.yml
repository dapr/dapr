parameters:
  poolImage: 'macOS-latest'
  targetOS: 'darwin'
  targetArch: 'amd64'
  dependStep: 'release_environment'
  relVersion: ''
jobs:
- job: build_${{ parameters.targetOS }}_${{ parameters.targetArch }}
  dependsOn:
    ${{ parameters.dependStep }}
  variables:
    GOOS: ${{ parameters.targetOS }}
    GOARCH: ${{ parameters.targetArch }}
    REL_VERSION: ${{ parameters.relVersion }}
    GOPROXY: https://proxy.golang.org
  pool:
    vmImage: '${{ parameters.poolImage }}'
  steps:
    - task: GoTool@0
      displayName: 'Install Go'
      inputs:
        version: '1.12'
    - task: Bash@3
      displayName: 'Set up the Go workspace'
      inputs:
        targetType: 'inline'
        script: |
          mkdir -p '$(GOPATH)/pkg'
          mkdir -p '$(GOPATH)/bin'
          mkdir -p '$(modulePath)'
          shopt -s extglob
          mv !(gopath) '$(modulePath)'
          echo '##vso[task.prependpath]$(GOBIN)'
    - task: CmdLine@2
      displayName: 'Run make test'
      condition: ne('${{ parameters.targetArch }}', 'arm')
      inputs:
        script: 'make test'
        workingDirectory: '$(modulePath)'
        failOnStderr: false
    - task: CmdLine@2
      displayName: 'Run make release to build and archive binaries'
      inputs:
        script: 'make release GOOS=${{ parameters.targetOS }} GOARCH=${{ parameters.targetArch }} ARCHIVE_OUT_DIR=$(Build.ArtifactStagingDirectory)'
        workingDirectory: '$(modulePath)'
        failOnStderr: false
    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        parallel: true,
        parallelCount: 8
        publishLocation: 'Container'
