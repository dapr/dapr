parameters:
  pool: 'macOS'
  targetOS: 'darwin'
  binaryName: 'action'

jobs:
- job: build_${{ parameters.binaryName }}_${{ parameters.targetOS }}
  pool:
    vmImage: '${{ parameters.pool }}-latest'
  steps:
    - task: GoTool@0
      inputs:
        version: '1.12'
    - script: |
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
      displayName: 'Set up the Go workspace'
    - task: Go@0
      inputs:
        command: 'get'
        arguments: '-v -t -d ./...'
        workingDirectory: '$(modulePath)/cmd/${{ parameters.binaryName }}'
        displayName: 'Run go get'
    - task: CmdLine@2
      inputs:
        script: 'make test'
        workingDirectory: '$(modulePath)'
        failOnStderr: true
        displayName: 'Run go test'
    - task: Go@0
      inputs:
        command: 'build'
        arguments: '-v -o $(Build.BinariesDirectory)/${{ parameters.targetOS }}/${{ parameters.binaryName }}'
        workingDirectory: '$(modulePath)/cmd/${{ parameters.binaryName }}'
        displayName: 'Run go build'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/${{ parameters.targetOS }}'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.targetOS }}/${{ parameters.binaryName }}_${{ parameters.targetOS }}.zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.targetOS }}'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        displayName: 'Publish build artifacts'
